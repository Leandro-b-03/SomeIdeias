@define-mixin reset-border-color-input {
  border-left-color: $color-neutral;
  border-right-color: $color-neutral;
  border-top-color: $color-neutral;
}


@define-mixin form-component $border-color, $border-color-focus {
  border: .06rem solid $color-$(border-color);
  border-radius: .25rem;
  color: $color-text;
  outline: 0;
  padding-bottom: .6rem;
  padding-left: .4rem;
  padding-right: .4rem;
  padding-top: .6rem;
  transition: border-color .3s ease-in-out;
  width: 100%;
  @mixin-content;

  &:focus {
    border-bottom-color: $color-$(border-color-focus);
    @mixin reset-border-color-input;
  }

  &[disabled] {
    background-color: $color-neutral;
    border-color: $color-default-light;
    color: $color-default-light;

    &:hover {
      cursor: not-allowed;
    }
  }
}

@define-mixin field-validation $color-name, $glyph-name {

  &::after {
    @mixin $glyph-name;
    background-color: $color-$(color-name);
    color: $color-neutral;
    font-family: Glyphs;
    font-size: .6rem;
    line-height: 1.2rem;
    text-align: center;
  }

  .input,
  .select,
  .textarea {
    border-bottom-color: $color-$(color-name);
    @mixin reset-border-color-input;
  }

  .label,
  .helper {
    color: $color-$(color-name);
  }
}

@define-mixin clearfix {
  *zoom: 1;

  &::before {
    content: "";
    display: table;
  }

  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

@define-mixin getSize $columns, $i, $prop {
  $(prop): calc((100% / $columns) * $i);
}

@define-mixin column-base {
  box-sizing: border-box;
  float: left;
  padding-left: calc($gutter-width / 2);
  padding-right: calc($gutter-width / 2);
}

@define-mixin push-pull-grid {
  position: relative;
}
